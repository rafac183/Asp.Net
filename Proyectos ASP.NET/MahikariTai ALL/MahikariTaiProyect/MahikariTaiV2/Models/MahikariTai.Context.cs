//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MahikariTaiV2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_MahikariTaiEntities : DbContext
    {
        public db_MahikariTaiEntities()
            : base("name=db_MahikariTaiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<admision> admision { get; set; }
        public virtual DbSet<cargo> cargo { get; set; }
        public virtual DbSet<cargo_names> cargo_names { get; set; }
        public virtual DbSet<categoria> categoria { get; set; }
        public virtual DbSet<ciudad> ciudad { get; set; }
        public virtual DbSet<comuna> comuna { get; set; }
        public virtual DbSet<direccion> direccion { get; set; }
        public virtual DbSet<estudios> estudios { get; set; }
        public virtual DbSet<familia> familia { get; set; }
        public virtual DbSet<gender> gender { get; set; }
        public virtual DbSet<grado_estudios> grado_estudios { get; set; }
        public virtual DbSet<job> job { get; set; }
        public virtual DbSet<login> login { get; set; }
        public virtual DbSet<miembro> miembro { get; set; }
        public virtual DbSet<nacionality> nacionality { get; set; }
        public virtual DbSet<omitama> omitama { get; set; }
        public virtual DbSet<omitama_date> omitama_date { get; set; }
        public virtual DbSet<region> region { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<allMembers_Result> allMembers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<allMembers_Result>("allMembers");
        }
    
        public virtual ObjectResult<string> categorias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("categorias");
        }
    
        public virtual int crearMiembro(string categoria_name, string nombres, string first_lastname, string second_lastname, string gender, string rut_user, Nullable<System.DateTime> birthdate, string nacionality, string calle, Nullable<int> number, string phone_number, string email, string hobbies, string nombre_comuna, string nombre_ciudad, string nombre_region)
        {
            var categoria_nameParameter = categoria_name != null ?
                new ObjectParameter("categoria_name", categoria_name) :
                new ObjectParameter("categoria_name", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var first_lastnameParameter = first_lastname != null ?
                new ObjectParameter("first_lastname", first_lastname) :
                new ObjectParameter("first_lastname", typeof(string));
    
            var second_lastnameParameter = second_lastname != null ?
                new ObjectParameter("second_lastname", second_lastname) :
                new ObjectParameter("second_lastname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var rut_userParameter = rut_user != null ?
                new ObjectParameter("rut_user", rut_user) :
                new ObjectParameter("rut_user", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("birthdate", birthdate) :
                new ObjectParameter("birthdate", typeof(System.DateTime));
    
            var nacionalityParameter = nacionality != null ?
                new ObjectParameter("nacionality", nacionality) :
                new ObjectParameter("nacionality", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(int));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var hobbiesParameter = hobbies != null ?
                new ObjectParameter("hobbies", hobbies) :
                new ObjectParameter("hobbies", typeof(string));
    
            var nombre_comunaParameter = nombre_comuna != null ?
                new ObjectParameter("nombre_comuna", nombre_comuna) :
                new ObjectParameter("nombre_comuna", typeof(string));
    
            var nombre_ciudadParameter = nombre_ciudad != null ?
                new ObjectParameter("nombre_ciudad", nombre_ciudad) :
                new ObjectParameter("nombre_ciudad", typeof(string));
    
            var nombre_regionParameter = nombre_region != null ?
                new ObjectParameter("nombre_region", nombre_region) :
                new ObjectParameter("nombre_region", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearMiembro", categoria_nameParameter, nombresParameter, first_lastnameParameter, second_lastnameParameter, genderParameter, rut_userParameter, birthdateParameter, nacionalityParameter, calleParameter, numberParameter, phone_numberParameter, emailParameter, hobbiesParameter, nombre_comunaParameter, nombre_ciudadParameter, nombre_regionParameter);
        }
    
        public virtual int eliminarMiembro(string rut_user)
        {
            var rut_userParameter = rut_user != null ?
                new ObjectParameter("rut_user", rut_user) :
                new ObjectParameter("rut_user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarMiembro", rut_userParameter);
        }
    
        public virtual ObjectResult<string> generos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("generos");
        }
    
        public virtual int insertarDireccion(string calle, Nullable<int> numero, string nombre_comuna, string nombre_ciudad, string nombre_region)
        {
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var nombre_comunaParameter = nombre_comuna != null ?
                new ObjectParameter("nombre_comuna", nombre_comuna) :
                new ObjectParameter("nombre_comuna", typeof(string));
    
            var nombre_ciudadParameter = nombre_ciudad != null ?
                new ObjectParameter("nombre_ciudad", nombre_ciudad) :
                new ObjectParameter("nombre_ciudad", typeof(string));
    
            var nombre_regionParameter = nombre_region != null ?
                new ObjectParameter("nombre_region", nombre_region) :
                new ObjectParameter("nombre_region", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertarDireccion", calleParameter, numeroParameter, nombre_comunaParameter, nombre_ciudadParameter, nombre_regionParameter);
        }
    
        public virtual ObjectResult<miembroAllInfo_Result> miembroAllInfo(string rut_user)
        {
            var rut_userParameter = rut_user != null ?
                new ObjectParameter("rut_user", rut_user) :
                new ObjectParameter("rut_user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<miembroAllInfo_Result>("miembroAllInfo", rut_userParameter);
        }
    
        public virtual int modificarMiembro(string rut_user, string categoria_name, string nombres, string first_lastname, string second_lastname, string gender, Nullable<System.DateTime> birthdate, string nacionality, string calle, Nullable<int> number, string phone_number, string email, string hobbies, string nombre_comuna, string nombre_ciudad, string nombre_region)
        {
            var rut_userParameter = rut_user != null ?
                new ObjectParameter("rut_user", rut_user) :
                new ObjectParameter("rut_user", typeof(string));
    
            var categoria_nameParameter = categoria_name != null ?
                new ObjectParameter("categoria_name", categoria_name) :
                new ObjectParameter("categoria_name", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var first_lastnameParameter = first_lastname != null ?
                new ObjectParameter("first_lastname", first_lastname) :
                new ObjectParameter("first_lastname", typeof(string));
    
            var second_lastnameParameter = second_lastname != null ?
                new ObjectParameter("second_lastname", second_lastname) :
                new ObjectParameter("second_lastname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("birthdate", birthdate) :
                new ObjectParameter("birthdate", typeof(System.DateTime));
    
            var nacionalityParameter = nacionality != null ?
                new ObjectParameter("nacionality", nacionality) :
                new ObjectParameter("nacionality", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(int));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var hobbiesParameter = hobbies != null ?
                new ObjectParameter("hobbies", hobbies) :
                new ObjectParameter("hobbies", typeof(string));
    
            var nombre_comunaParameter = nombre_comuna != null ?
                new ObjectParameter("nombre_comuna", nombre_comuna) :
                new ObjectParameter("nombre_comuna", typeof(string));
    
            var nombre_ciudadParameter = nombre_ciudad != null ?
                new ObjectParameter("nombre_ciudad", nombre_ciudad) :
                new ObjectParameter("nombre_ciudad", typeof(string));
    
            var nombre_regionParameter = nombre_region != null ?
                new ObjectParameter("nombre_region", nombre_region) :
                new ObjectParameter("nombre_region", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificarMiembro", rut_userParameter, categoria_nameParameter, nombresParameter, first_lastnameParameter, second_lastnameParameter, genderParameter, birthdateParameter, nacionalityParameter, calleParameter, numberParameter, phone_numberParameter, emailParameter, hobbiesParameter, nombre_comunaParameter, nombre_ciudadParameter, nombre_regionParameter);
        }
    
        public virtual ObjectResult<string> nacionalidades()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("nacionalidades");
        }
    
        public virtual ObjectResult<string> regiones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("regiones");
        }
    
        public virtual ObjectResult<string> searchCiudadesPorRegion(string nombreRegion)
        {
            var nombreRegionParameter = nombreRegion != null ?
                new ObjectParameter("nombreRegion", nombreRegion) :
                new ObjectParameter("nombreRegion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("searchCiudadesPorRegion", nombreRegionParameter);
        }
    
        public virtual ObjectResult<string> searchComunasPorCiudad(string nombreCiudad)
        {
            var nombreCiudadParameter = nombreCiudad != null ?
                new ObjectParameter("nombreCiudad", nombreCiudad) :
                new ObjectParameter("nombreCiudad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("searchComunasPorCiudad", nombreCiudadParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
